// sort.h - описания классов для идентификации различных типов сокета


#ifndef SORT_H_
#define SORT_H_


	namespace so { // Протсранство имен сокетов


		// Абстрактный класс для идентификации типа сокета

			class sort {


				private:
							
					
					int id;	// Идентификатор семейсва протокола сокета


				public:


					// Перечисляемый тип, который хранит константы, идентифицирующие все возможные типы сокета
		
						enum { stream_id, dgram_id, packet_id, raw_id };


					// Конструктор класса по умолчанию

						sort() { id = UNKNOW_VALUE; }

					// Деструктор класса по умолчанию

						virtual ~sort() {}


					// Получение идентификатора типа сокета

						int getid() const { return id; }

					// Установка идентификатора типа сокета

						void setid(int id_) { id = id_; }


			}; // sort


		// Класс для идентификации потокового сокета

			class stream : public sort { 


				public: 


					// Конструкторы и деструкторы класса

		
						// Конструктор по умолчанию

							stream() { setid(stream_id); }

						// Деструктор по умолчанию

							virtual ~stream() {}
				

			}; // stream



		// Класс для идентификации дейтаграммного сокета

			class dgram : public sort { 


				public: 


					// Конструкторы и деструкторы класса

		
						// Конструктор по умолчанию

							dgram() { setid(dgram_id); }

						// Деструктор по умолчанию

							virtual ~dgram() {}
				

			}; // dgram


		// Класс для идентификации пакетного сокета

			class packet : public sort { 


				public: 


					// Конструкторы и деструкторы класса

		
						// Конструктор по умолчанию

							packet() { setid(packet_id); }

						// Деструктор по умолчанию

							virtual ~packet() {}
				

			}; // packet


		// Класс для идентификации символьного сокета

			class raw : public sort { 


				public: 


					// Конструкторы и деструкторы класса

		
						// Конструктор по умолчанию

							raw() { setid(raw_id); }

						// Деструктор по умолчанию

							virtual ~raw() {}
				

			}; // raw
			
			
		// Класс для идентификации сокета упарвления ключами

			class key : public sort { 


				public: 


					// Конструкторы и деструкторы класса

		
						// Конструктор по умолчанию

							key() { setid(raw_id); }

						// Деструктор по умолчанию

							virtual ~key() {}
				

			}; // key
			
			
		// Статический объект класса идентификатора типа потокового сокета 
		
			static stream stream;
			
		// Статический объект класса идентификатора типа дейтаграммного сокета
		
			static dgram dgram;
			
		// Статический объект класса идентификатора типа пакетного сокета
		
			static packet packet;
			
		// Статический объект класса идентификатора типа символьного сокета
		
			static raw raw;
			
		// Статический объект класса идентификатора типа сокета управления ключами
		
			static key key;
		

	} // namespace so


#endif // SORT_H_
